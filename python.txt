ICT 3 2022 - 2023
Stream
Classwork
People
ICT 3 2022 - 2023
ICT 3 2022 - 2023
Upcoming
Woohoo, no work due soon!

Announce something to your class

Announcement: "Retest timings Practical time: 11:00 am…"
Dr. Veena Jokhakar
Created 2:00 PM2:00 PM
Retest timings

Practical time:
11:00 am -12:00 noon

Theory time:
1:00pm- 2:00pm


Announcement: "Retest will be held on 15th of this…"
Dr. Veena Jokhakar
Created YesterdayYesterday
Retest will be held on 15th of this month for both theory and practicals


Announcement: "Students scoring less than 12 have to…"
Dr. Veena Jokhakar
Created YesterdayYesterday
Students scoring less than 12 have to give the retest of practical only Datascience

ICT 305 prac DS_cloud internal.pdf
PDF


Announcement: "Students scoring less than 12 have to…"
Dr. Veena Jokhakar
Created YesterdayYesterday
Students scoring less than 12 have to give the exam retest

ICT 3 301 dspython internal.pdf
PDF


Announcement: "Feature / dimensions reduction Don’t…"
Dr. Veena Jokhakar
Created YesterdayYesterday
Feature / dimensions reduction

Don’t attempt exam without studying
You will face difficulties then in e am
Pl read


Announcement: "Read PCA"
Dr. Veena Jokhakar
Created YesterdayYesterday
Read PCA


Announcement: "Dear students practice properly Read…"
Dr. Veena Jokhakar
Created YesterdayYesterday
Dear students practice properly
Read all the materials provided


Announcement: "Dear Students, I updated my laptop's…"
Dr. Veena Jokhakar
Created Oct 6Oct 6
Dear Students,

I updated my laptop's h/w due to which i am facing problem to access the backup data.

Hence i was to take the last lecture on data reduction and wanted to show EDA + Model creation .
Out of which Data/feature reduction algorithm PCA has been given to you in material of this classroom
and for EDA+Model program i am giving you the link below to follow.

Read and execute the commands, you will understand you know it all as we have already coverred those thing in class.

https://ugoproto.github.io/ugo_py_doc/eda_machine_learning_feature_engineering_and_kaggle/


and refer the attachment too that continues with last lecture.

in case of any sort of doubt, you are free to contact me any time.

titanic_kernel.py
Text

Material: "feature reduction"
Dr. Veena Jokhakar posted a new material: feature reduction
Created Oct 4Oct 4
Material: "Material"
Dr. Veena Jokhakar posted a new material: Material
Created Oct 4Oct 4
Assignment: "Assignment 4"
Dr. Veena Jokhakar posted a new assignment: Assignment 4
Created Oct 4Oct 4

Announcement: "I commented for assignment 2"
Dr. Veena Jokhakar
Created Sep 14Sep 14
I commented for assignment 2


Announcement: "Many of you have done good work Hope…"
Dr. Veena Jokhakar
Created Sep 14Sep 14
Many of you have done good work
Hope it’s not copied
I believe you all
Few stiyaring yet left
I request to just follow the same steps that I have shared as example


Announcement: "Submit assignment 2 soon of EDA we have…"
Dr. Veena Jokhakar
Created Sep 3Sep 3
Submit assignment 2 soon of EDA
we have seen in class many times

Assignment: "Assignment 3"
Dr. Veena Jokhakar posted a new assignment: Assignment 3
Created Sep 3Sep 3

Announcement: "Consider the data posted as assignment…"
Dr. Veena Jokhakar
Created Aug 30Aug 30
Consider the data posted as assignment as applied to this code

Automobile_EDA.py
Text

Assignment: "Practical Eda data"
Dr. Veena Jokhakar posted a new assignment: Practical Eda data
Created Aug 30Aug 30
Assignment: "Assignment 1"
Dr. Veena Jokhakar posted a new assignment: Assignment 1
Created Aug 5Aug 5
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  2 12:03:17 2020

@author: vajok

Findings
We have taken some key features of the automobile dataset for this analysis and below are our findings.

Toyota is the make of the car which has most number of vehicles with more than 40% than the 2nd highest Nissan
Most preferred fuel type for the customer is standard vs trubo having more than 80% of the choice
For drive wheels, front wheel drive has most number of cars followed by rear wheel and four wheel. There are very less number of cars for four wheel drive.
Curb weight of the cars are distributed between 1500 and 4000 approximately
Symboling or the insurance risk rating have the ratings between -3 and 3 however for our dataset it starts from -2. There are more cars in the range of 0 and 1.
Normalized losses which is the average loss payment per insured vehicle year is has more number of cars in the range between 65 and 150.
"""


# import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os

print(os.chdir("D:\Lectures\Lectures\Data Science\datasetDS"))

# reading data
automobile = pd.read_csv('Automobile_data.csv')
print(automobile.head())

# # # getting datatypes
print(automobile.dtypes)

#getting statistics
print(automobile.describe())

#cleaning data
print(automobile.isnull().sum())

# # #cleaning the normalized data
# # # Find out number of records having '?' value for normalized losses
print(automobile['normalized-losses'].loc[automobile['normalized-losses'] == '?'].count())
# # #setting missing to mean
# # # Setting the missing value to mean of normalized losses and conver the datatype to integer
nl = automobile['normalized-losses'].loc[automobile['normalized-losses'] != '?']
nlmean = nl.astype(str).astype(int).mean()
automobile['normalized-losses'] = automobile['normalized-losses'].replace('?',nlmean).astype(int)
print(automobile['normalized-losses'].head())



# #cleaning price data
# # Find out the number of values which are not numeric
print(automobile['price'].str.isnumeric().value_counts())


# #List out the values which are not numeric
print(automobile['price'].loc[automobile['price'].str.isnumeric() == False])

# #Setting the missing value to mean of price and convert the datatype to integer
price = automobile['price'].loc[automobile['price'] != '?']
pmean = price.astype(str).astype(int).mean()
automobile['price'] = automobile['price'].replace('?',pmean).astype(int)
print(automobile['price'].head())




# #Checking the numberic and replacing with mean value and conver the datatype to integer
automobile['horsepower'].str.isnumeric().value_counts()
horsepower = automobile['horsepower'].loc[automobile['horsepower'] != '?']
hpmean = horsepower.astype(str).astype(int).mean()
automobile['horsepower'] = automobile['horsepower'].replace('?',pmean).astype(int)




# #Checking the outlier of horsepower

print(automobile.loc[automobile['horsepower'] > 10000])


# #Excluding the outlier data for horsepower
print(automobile[np.abs(automobile.horsepower - automobile.horsepower.mean()) <= (3*automobile.horsepower.std())])


# #Find out the number of invalid value
print(automobile['bore'].loc[automobile['bore'] == '?'])



# #Replace the non-numeric value to null and conver the datatype
automobile['bore'] = pd.to_numeric(automobile['bore'],errors='coerce')
print(automobile.dtypes)


# #Replace the non-number value to null and convert the datatype
automobile['stroke'] = pd.to_numeric(automobile['stroke'],errors='coerce')
print(automobile.dtypes)


# #Convert the non-numeric data to null and convert the datatype
automobile['peak-rpm'] = pd.to_numeric(automobile['peak-rpm'],errors='coerce')
print(automobile.dtypes)

# #remove the records which are having the value '?'
automobile['num-of-doors'].loc[automobile['num-of-doors'] == '?']
automobile = automobile[automobile['num-of-doors'] != '?']
automobile['num-of-doors'].loc[automobile['num-of-doors'] == '?']


# automobile.make.value_counts().nlargest(10).plot(kind='bar', figsize=(15,5))
# plt.title('Number of vehicles by make')
# plt.ylabel('Number of vehicles')
# plt.xlabel('Make');

automobile.symboling.hist(bins=6,color='green');
plt.title("Insurance risk ratings of vehicles")
plt.ylabel('Number of vehicles')
plt.xlabel('Risk rating');

automobile['normalized-losses'].hist(bins=5,color='orange');
plt.title("Normalized losses of vehicles")
plt.ylabel('Number of vehicles')
plt.xlabel('Normalized losses');


automobile['fuel-type'].value_counts().plot(kind='bar',color='purple')
plt.title("Fuel type frequence diagram")
plt.ylabel('Number of vehicles')
plt.xlabel('Fuel type');

automobile['aspiration'].value_counts().plot.pie(figsize=(6, 6), autopct='%.2f')
plt.title("Fuel type pie diagram")
plt.ylabel('Number of vehicles')
plt.xlabel('Fuel type');


automobile.horsepower[np.abs(automobile.horsepower-automobile.horsepower.mean())<=(3*automobile.horsepower.std())].hist(bins=5,color='red');
plt.title("Horse power histogram")
plt.ylabel('Number of vehicles')
plt.xlabel('Horse power');

automobile['num-of-doors'].value_counts().plot(kind='bar',color='purple')
plt.title("Number of doors frequency diagram")
plt.ylabel('Number of vehicles')
plt.xlabel('Number of doors');

Automobile_EDA.py
Displaying Automobile_EDA.py.